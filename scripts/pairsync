#!/usr/bin/perl -l


# Copyright (C) 2015 Bibliotheca Alexandrina <http://www.bibalex.org/>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or (at
# your option) any later version.

# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


# Initially by yid, with contribution from mam.

# TODO: --without-includes-file, --no-implicit-includes, --no-implicit-exclude-all.

use Cwd qw(abs_path);
use Getopt::Long qw(GetOptions);

$s_hostname = `hostname`;

$s_hostname =~ /(\D+)(\d+)/;
$l = length $2;

Getopt::Long::Configure('gnu_getopt');
GetOptions('m=s' => \$d_hostname, 'help|h!' => \$help, 'without-includes-file' => \$without_includes_file, 'no-implicit-includes' => \$no_implicit_includes, 'no-implicit-exclude-all' => \$no_implicit_exclude_all,);

unless (defined($d_hostname))
{
  # If this host has an even hostnum, the pair is at hostnum add 1 (sub
  # 1 otherwise), and it is assumed numbers will not overflow and break
  # the padding.
  if ($2 % 2 == 0)
  {
    $d_hostname = $1 . sprintf ( "%0${l}d", $2 + 1 );
  }
  else
  {
    $d_hostname = $1 . sprintf ( "%0${l}d", $2 - 1 );
  }
}

foreach (@ARGV)
{
  # Get the absolute path, collapse successive slashes, trim trailing
  # slash.
  $_ = abs_path("$_");

  unless (-d $_)
  {
    warn "$_: Not a directory";
    next;
  }

  $sync = "rsync -a --delete '$_/' '$d_hostname:$_/'";

  undef $includes;
  $f = ".pairsync.includes";

  if (-e "$_/$f")
  {
    unless (-f "$_/$f" && -r "$_/$f")
    {
      warn "$_/$f: Exists but not a regular file or unreadable";
      next;
    }

    $sync .= " --include='/$f' --include-from='$_/$f'";
    $includes = "$_/$f";
  }

  undef $thenexec;
  $f = ".pairsync.thenexec";

  if (-e "$_/$f")
  {
    unless (-f "$_/$f" && -r "$_/$f")
    {
      warn "$_/$f: Exists but not a regular file or unreadable";
      next;
    }

    $sync .= " --include='/$f'" if defined $includes;
    $thenexec = "$_/$f";
  }

  if ($includes)
  {
    $sync .= " --exclude='*'";
  }
 
  `$sync`;

  if ($thenexec)
  {
                    `/bin/sh <\"$thenexec\"`;
    `ssh $d_hostname /bin/sh <\"$thenexec\"`;
  }
}
